TODO:
1) projections with interface  - check
2) return hotels with rooms - done
3) Optimise jpa model, remove redundant ids (Room-hotelId) done

5) Tried to use magic JPA hotelRepository.findHotelNameById(hotelId); - done
6) use Builder or chain accessor instead of constructor with parameters - in case constructor has more 3 parameters -didn't see

8) DB procedure (select ra from RoomAvailability ra where ra.roomId = r.id " +
                            "and ra.end>=:start and ra.start<=:end) done

10) (thymeleaf for email notification) for future;

 13) Spring update to latest; (3.1.4), Java 17 to do; TODO  java 17

15) See only booked by me.to do

16)
owner can see only his property - one controller
admin can see and filter for all ownerIds - another controller
filter by  (dataCreated, dataModified) hotels and rooms
showMyPropertyOnly - for owner
SEt<ownerId> - for admin
in Spring security for endpoints isolate by roles not by annotation hasRole
17) exc look strange to do look at HotelNotFound Exc
*******************************************************************************************************************************
Useful links:
1)see https://blog.tericcabrel.com/write-custom-validator-for-body-request-in-spring-boot/

Notes:
errors in body request  - >400 (some fields are absent, not valid)
not-existent ids as PathVariables - >404

Double check:
1) why is it wrong?
http://localhost:8080/hotel/search?city=Barcelona&starRating=THREE&roomType=DOUBLE&checkIn=05_05_2023&checkOut=08_05_2023
but should be
http://localhost:8080/hotel/search?Barcelona&starRating=THREE&roomType=DOUBLE&checkIn=05_05_2023&checkOut=


QUESTIONS:
Exce handling UserAlreadyCreatedException (flag enabled should be passed?)

QUESTIONS:
Динамические проекции only subclass?
@Repository
public interface AuthorRepository extends CrudRepository<Author, Long> {
    <T> T findByLastName(String lastName, Class<T> type);

    READ:
     read about Spring magic method (count, sum)
}

TODO:
rename check_room_availability -> isRoomAvailable

FOR http://localhost:8080/hotel/1/filter?checkIn=2024-05-15&checkOut=2024-05-16
HotelDTOWithRooms:{
hotelDTO:{},
rooms:[]
}
change the schema and  try to map (mapstruct)


 ClaimsDto claimsDto = (ClaimsDto) authentication.getPrincipal(); should be in Controller, in service only id;

  @DateTimeFormat doesn't work inside
      public List<HotelCounterDTO> searchAvailableHotels(@ModelAttribute SearchRequest searchRequest) {


    SearchRequestDates.java do the same as SearchRequest
    compare 2 validators and use ValidateIntervalValidator, get rid of the second
