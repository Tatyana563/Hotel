CREATE TABLE city(
id serial PRIMARY KEY,
name VARCHAR (64)  NOT NULL UNIQUE,
country VARCHAR (64)  NOT NULL
                   );

CREATE TABLE hotel(
id serial PRIMARY KEY,
name VARCHAR (64)  NOT NULL UNIQUE,
type hotel_stars,
meals hotel_meals,
distance INTEGER,
city_fk_id INTEGER,
CONSTRAINT hotel_city FOREIGN KEY (city_fk_id)
REFERENCES city(id));


CREATE TABLE room(
id serial PRIMARY KEY,
number INTEGER,
type room_type,
sleeps sleeps_type,
price INTEGER,
square DOUBLE PRECISION,
parking BOOLEAN,
animals BOOLEAN,
hotel_fk_id INTEGER,
CONSTRAINT room_hotel FOREIGN KEY(hotel_fk_id)
REFERENCES hotel(id));

CREATE TYPE hotel_stars  AS ENUM ('ONE',
 'TWO',
 'THREE',
 'FOUR',
 'FIVE');

CREATE TYPE hotel_meals AS ENUM (
'BREAKFAST',
'BREAKFAST_DINNER',
'SELF_CATERING',
'ALL_INCLUSIVE');

	CREATE TYPE room_type AS ENUM (
	'SINGLE',
    'DOUBLE',
    'SUITE');

	CREATE TYPE sleeps_type AS ENUM ( 'ONE',
    'TWO',
    'THREE',
    'FOUR');

    CREATE SEQUENCE city_sequence
                            start 1
                            increment 1

    						CREATE SEQUENCE hotel_sequence
                            start 1
                            increment 1

    						CREATE SEQUENCE hotel_sequence
                            start 1
                            increment 1

                            CREATE TABLE app_user(
                                               user_id serial PRIMARY KEY,
                                               username VARCHAR NOT NULL,
                                               password VARCHAR NOT NULL,
                                               phone VARCHAR (64),
                                               email VARCHAR (64)  NOT NULL

                                                                    );
  CREATE TABLE task(
id serial PRIMARY KEY,
error_message VARCHAR,
status VARCHAR NOT NULL,
user_fk_id INTEGER NOT NULL,
CONSTRAINT task_user FOREIGN KEY(user_fk_id)
REFERENCES app_user(user_id));

)

CREATE TABLE room_availabily
(
    id      serial PRIMARY KEY,
    room_id INTEGER,
    start_date TIMESTAMP,
    end_date TIMESTAMP,
    CONSTRAINT room_availability_room FOREIGN KEY (room_id)
        REFERENCES room (id)
);

alter table hotel
DROP CONSTRAINT hotel_name_key - is not right

ALTER TABLE hotel ADD UNIQUE (name);


CREATE OR REPLACE FUNCTION check_room_availability(roomId INT, startDate DATE, endDate DATE)
    RETURNS BOOLEAN AS $$
DECLARE
    room_available_result BOOLEAN;
BEGIN

    SELECT COUNT(*) = 0 INTO room_available_result
    FROM room_availabily ra
    WHERE ra.room_id = roomId AND ra.end_date >= startDate AND ra.start_date <= endDate;

    RETURN room_available_result;
END;
$$ LANGUAGE plpgsql;

DROP FUNCTION check_room_availability;



CREATE TABLE role(
                     id serial PRIMARY KEY,
                     role VARCHAR (64)  NOT NULL);

CREATE TABLE users(
                     id serial PRIMARY KEY,
                     role_fk_id INTEGER NOT NULL ,
                     name VARCHAR (64)  NOT NULL ,
                     surname VARCHAR (64)  NOT NULL ,
                     login VARCHAR (64)  NOT NULL ,
                     password VARCHAR (64)  NOT NULL ,
                     CONSTRAINT user_role FOREIGN KEY (role_fk_id)
                         REFERENCES role(id));

